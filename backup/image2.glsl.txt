#version 150
out vec4 FragColor;

uniform sampler2D iChannel0;
uniform sampler2D iChannel1;
uniform sampler2D iChannel2;
uniform sampler2D iChannel3;
uniform samplerCube iChannel4;
uniform samplerCube iChannel5;
uniform samplerCube iChannel6;
uniform samplerCube iChannel7;
uniform vec4 iMouse;
uniform vec2 iResolution;
uniform float iTime;

#define S(a, b, c) smoothstep(a,b,c)

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    fragCoord.y = iResolution.y - fragCoord.y;
    vec2 uv = fragCoord/iResolution.xy;

    // Time varying pixel color
    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));

    // Output to screen
    fragColor = texture(iChannel0, uv);
    float base_green = texture(iChannel0, uv).g;
    
    float cmp = cos(iTime/3.)*.55+.45;
    
    // if (base_green < cmp)
    // if (base_green - cmp < .4)
    {
        // fragColor = vec4(1);
        // fragColor = mix(vec4(1), fragColor, cmp - base_green);
        // fragColor = mix(vec4(1), fragColor, base_green - cmp);
        fragColor = mix(vec4(1), fragColor, S(0.25,1,base_green - cmp));
    }
}

void main( void ){vec4 color = vec4(0.0,0.0,0.0,1.0); mainImage(color, gl_FragCoord.xy);color.w = 1.0;FragColor = color;}
